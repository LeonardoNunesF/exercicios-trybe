version: '3'
services:
  frontend:
    build: frontend/    # Especificamos o contexto, ou seja, a pasta onde está o Dockerfile.
    # restart: on-failure # Define que o container será reiniciado caso ocorra alguma falha apontada pelo exit code, diferente de zero; 
    restart: always # Define que o container será reiniciado sempre que for finalizado, independente do motivo.
    ports:
      - 3000:3000 # O primeiro parâmetro é sempre a porta do computador local e o segundo parâmetro é a porta exposta no container. 
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/frontend/src
    networks:
      - rede-virtual-1
  backend:
    build: backend/     # Mesmo caso aqui.
    # restart: on-failure
    restart: always
    ports:
      - 3001:3001
    environment:
      - DB_HOST=database # Especificamos a variável de ambiente DB_HOST com o valor database, que é o nome do serviço do banco de dados.
    depends_on: 
      - database # Especificamos que o serviço backend depende do serviço database.
    networks:
      - rede-virtual-1
      - rede-virtual-2
  database:
    image: betrybe/docker-compose-example-database:v1    # Especificamos a Imagem Docker diretamente.
    restart: always
    networks:
      - rede-virtual-2
volumes:
  dados-do-banco:

networks:
  rede-virtual-1:
  rede-virtual-2: